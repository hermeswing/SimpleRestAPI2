##############################################################
# Spring JPA 처리
spring:
  ##############################################################
  # Spring Database 처리
  datasource:
    class-name: org.postgresql.Driver                   # p6spy-spring-boot-starter 를 설정할 경우
    url: jdbc:postgresql://localhost:5432/springboot           # p6spy-spring-boot-starter 를 설정할 경우
    username: hermeswing
    password: pass
    #sql-script-encoding: utf-8            # springboot 1.5.x - Deprecated!
  jpa:
    open-in-view: false
    #database-platform: org.hibernate.dialect.PostgreSQLDialect
    #show-sql: true       # System.out 으로 출력. logging.level.org.hibernate.SQL=debug 로 대체합니다.
    hibernate:
      # create : entity를 drop cascade 하고 다시 생성
      # update : entity가 수정되면 수정된 내용만 반영
      # create-drop,validate, none
      # 하이버네이트가 자동으로 생성해주는 DDL은 신뢰성이 떨어지기 때문에
      # 절대로! 운영DB 환경에서 그대로 사용하면 안되고, 직접 DDL을 작성하는 것을 권장
      ddl-auto: none
  ##############################################################
  # Spring Message 처리
  # spring.messages 처리
  messages:
    basename: messages/messages, messages/exception   # 각각 ResourceBundle 규칙을 따르는 쉼표로 구분된 기본 이름 목록
    always-use-message-format: false  # 인수가 없는 메시지도 구문 분석하여 항상 MessageFormat 규칙을 적용할지 여부
    encoding: UTF-8
    fallback-to-system-locale: true   # locale에 해당하는 file이 없을 경우 system locale을 사용 ( default : true )
    use-code-as-default-message: true # 해당 코드를 찾을 수 없을 경우 Code 를 출력한다. ( default : false )
    cache-duration: 3                 # default는 forever
    #cache-seconds: -1                # 로드된 자원 번들 파일 캐시 만료(초). -1로 설정하면 번들은 영원히 캐시됩니다.

  #devtools:
  #  livereload:
  #    enabled: true      # DevTools 사용 시 true
##############################################################
# Logging
# logback-local.xml 파일이 적용되기 전 적용됨.
# Tomcat 시작 시 적용됨.
logging:
  level:  # 각 package 별로 로깅 레벨을 지정할 수 있다.
    root : INFO
    octopus: DEBUG
    org:
      #hibernate:
      #  type:
      #    descriptor:
      #      sql:
      #        BasicBinder: INFO              # TRACE org.hibernate.type.descriptor.sql.BasicBinder.bind 로그를 지웁니다.
      #  SQL: INFO                            # DEBUG              org.hibernate.SQL.logStatement 를 지웁니다.
      springframework: INFO
  pattern:
    console: "%-5level %d{yy-MM-dd HH:mm:SSS}[%thread] %boldMagenta([▶ %logger.%method ◀])[%line]: - %msg%n"
    file: "%-5level %d{yy-MM-dd HH:mm:SSS}[%thread] %logger.%method[%line]: - %msg%n"
    level: "[%X{FUNCTION_NAME}:%X{X-Track-Id}:%X{LOGIN_USER_ID}] 5p%"
  file:
    name: /home/jypark/workspace/logs/app_log.log  # 로깅 파일 위치이다.
  logback:
    rollingpolicy:
      max-file-size: 100MB               #default 10M 로그 파일 하나당 최대 파일 사이즈이다.
      #max-history: 31                   #default 7 로그 파일 삭제 주기이다. 7일 이후 로그는 삭제한다.
      max-history: 1                   #default 7 로그 파일 삭제 주기이다. 7일 이후 로그는 삭제한다.
      file-name-pattern: app_log.%d{yyyy-MM-dd}.%i.gz
